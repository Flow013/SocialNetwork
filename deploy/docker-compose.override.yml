version: '3.9'

services:
  otus-socialnetwork:
    environment:
      ASPNETCORE_ENVIRONMENT: "Development"
      ASPNETCORE_HTTP_PORTS: 8080
      # - ASPNETCORE_HTTPS_PORTS=8081
      DatabaseSettings__ConnectionString: "Host=postgres;Port=5432;Username=dbuser;Password=dbpassword;Database=otusdb;Pooling=true;"
    ports:
      - "8080:8080"
      # - "8081"
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro
    networks:
      - postgres

  postgres:
    container_name: postgres_container
    image: postgres:16.1-alpine3.18
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    environment:
      POSTGRES_DB: "otusdb"
      POSTGRES_USER: "dbuser"
      POSTGRES_PASSWORD: "dbpassword"
      PGDATA: "/var/lib/postgresql/data/pgdata"
    volumes:
      - ./init-db:/docker-entrypoint-initdb.d # Инициализация таблиц
      - postgresql-data:/var/lib/postgresql/data # Папка, где postgres будет хранить данные
      - ./volumes/Database/backups:/backups # Папка для бекапов
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dbuser -d otusdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G
    networks:
      - postgres

  pgadmin:
    container_name: pgadmin_container
    image: dpage/pgadmin4:8.2
    environment:
      PGADMIN_DEFAULT_EMAIL: "admin@example.com"
      PGADMIN_DEFAULT_PASSWORD: "admin"
      PGADMIN_CONFIG_SERVER_MODE: "False" # To allow running in desktop mode
      PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: "False"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
      - ./volumes/Database/backups:/backups # Папка для бекапов
      - ./docker_pgadmin_servers.json:/pgadmin4/servers.json
    ports:
      - "5050:80"
    entrypoint:
      - "/bin/sh"
      - "-c"
      - "/bin/echo 'postgres:5432:*:postgres:password' > /tmp/pgpassfile && chmod 600 /tmp/pgpassfile && /entrypoint.sh"
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G
    networks:
      - postgres

volumes:
  postgresql-data:
  pgadmin-data:

networks:
  postgres:
    driver: bridge